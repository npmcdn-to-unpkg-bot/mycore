<!-- build.xml - build file for the MyCoRe API -->

<project default="usage" basedir=".">

  <!-- =================================================================== -->
  <!-- Constant values                                                     -->
  <!-- =================================================================== -->

  <!-- compiler -->
  <property name="build.compiler" value="classic"/>
  <property name="build.sysclasspath" value="last"/>
  <property name="debug" value="on"/>
  <property name="optimize" value="on"/>
  <property name="deprecation" value="on"/>
    
  <!-- file system -->
  <property name="sources"      value="./sources"/>
  <property name="classes"      value="./classes"/>
  <property name="javadocs"     value="./javadocs"/>
  <property name="lib"          value="./lib"/>
  <property name="persistency"  value="cm7"/>
  <property name="database"     value="db2"/>
    
  <!-- =================================================================== -->
  <!-- Help on usage                                                       -->
  <!-- =================================================================== -->
  <target name="usage">
    <echo>
    
 ----------------------- MyCoRe build file ---------------------------
    
   available targets are:
   
      package     --> generates class files, jar and javadocs
      compile     --> compiles the source code
      compile_pkg --> compiles mycore subpackage pkg
      javadocs    --> generates the JavaDoc API documentation
      jar         --> creates /lib/mycore.jar containing all MyCoRe classes
      clean       --> cleans up the directory, removes all generated files
   
   See the comments inside the build.xml file for more details.

 ---------------------------------------------------------------------
  
    </echo>
  </target>

  <!-- =================================================================== -->
  <!-- The initalization for all                                           -->
  <!-- =================================================================== -->
  <target name="init" >
   <mkdir dir="${classes}"/>
   <mkdir dir="${javadocs}"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Creates the class package                                           -->
  <!-- =================================================================== -->
  <target name="package" depends="jar,javadocs">
  </target>

  <!-- =================================================================== -->
  <!-- Creates a mycore.jar file containing all compiled MyCoRe classes    -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile">
    <jar jarfile="${lib}/mycore.jar" basedir="${classes}"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Compiles the sources                                                -->
  <!-- =================================================================== -->

  <target name="javac" depends="init">
    <javac srcdir="${sources}"
           destdir="${classes}"
           includes="${packages}"
           classpath="${lib}/ftp.jar"
           debug="${debug}"
           optimize="${optimize}"
           deprecation="on">
    </javac>
  </target>

  <target name="compile" depends="compile_common,compile_datamodel,compile_classifications,compile_nbn,compile_editor,compile_xml,compile_commandline,compile_communication,compile_ifs,compile_sql,compile_webservice,compile_user,compile_persistency,compile_database,compile_gui"/>

  <target name="compile_common">
    <antcall target="javac">
      <param name="packages" value="mycore/common/**"/>
    </antcall>
  </target>

  <target name="compile_persistency">
    <echo>Compiling for persistence layer ${persistency}</echo>
    <antcall target="compile_${persistency}">
      <param name="packages" value="mycore/${persistency}/**"/>
    </antcall>
  </target>

  <target name="compile_database">
    <echo>Compiling for for database layer ${database}</echo>
    <antcall target="compile_${database}">
      <param name="packages" value="mycore/${database}/**"/>
    </antcall>
  </target>

  <target name="compile_sql">
    <antcall target="javac">
      <param name="packages" value="mycore/sql/**"/>
    </antcall>
  </target>

  <target name="compile_db2">
    <antcall target="javac">
      <param name="packages" value="mycore/db2/**"/>
    </antcall>
  </target>

  <target name="compile_webservice">
    <antcall target="javac">
      <param name="packages" value="mycore/webservice/**"/>
    </antcall>
  </target>

  <target name="compile_ifs">
    <antcall target="javac">
      <param name="packages" value="mycore/ifs/**"/>
    </antcall>
  </target>

  <target name="compile_communication">
    <antcall target="javac">
      <param name="packages" value="mycore/communication/**"/>
    </antcall>
  </target>

  <target name="compile_xml">
    <antcall target="javac">
      <param name="packages" value="mycore/xml/**"/>
    </antcall>
  </target>

  <target name="compile_datamodel">
    <antcall target="javac">
      <param name="packages" value="mycore/datamodel/**"/>
    </antcall>
  </target>

  <target name="compile_classifications">
    <antcall target="javac">
      <param name="packages" value="mycore/classifications/**"/>
    </antcall>
  </target>

  <target name="compile_editor">
    <antcall target="javac">
      <param name="packages" value="mycore/editor/**"/>
    </antcall>
  </target>

  <target name="compile_user">
    <antcall target="javac">
      <param name="packages" value="mycore/user/**"/>
    </antcall>
  </target>

  <target name="compile_commandline">
    <antcall target="javac">
      <param name="packages" value="mycore/commandline/**"/>
    </antcall>
  </target>

  <target name="compile_nbn">
    <antcall target="javac">
      <param name="packages" value="mycore/nbn/**"/>
    </antcall>
  </target>

  <target name="compile_cm7">
   <antcall target="javac">
     <param name="packages" value="mycore/cm7/**"/>
   </antcall>
  </target>

  <target name="compile_cm8">
   <antcall target="javac">
     <param name="packages" value="mycore/cm8/**"/>
   </antcall>
  </target>

  <target name="compile_xmldb">
   <antcall target="javac">
     <param name="packages" value="mycore/xmldb/**"/>
     <param name="classpath" value="${lib}/xmldb.jar"/>
   </antcall>
  </target>

  <target name="compile_gui">
    <antcall target="javac">
      <param name="packages" value="mycore/gui/**"/>
    </antcall>
  </target>

  <!-- =================================================================== -->
  <!-- Create the JavaDocs from sources                                    -->
  <!-- =================================================================== -->
  <target name="javadocs" depends="init">
    <echo>

      Building the MyCoRe source code JavaDoc documentation...

      NOTE: Under AIX, you have to do the following to make this work:
      ln -s /usr/java_dev2/lib/tools.jar /usr/java_dev2/jre/lib/ext/tools.jar
    </echo>
    <javadoc
      packagenames        = "mycore.commandline.*,mycore.common.*,mycore.communication.*,mycore.datamodel.*,mycore.classifications.*,mycore.ifs.*,mycore.nbn.*,mycore.editor.*,mycore.sql.*,mycore.user.*,mycore.xml.*,mycore.${persistency}.*,mycore.${database}.*,mycore.gui.*,mycore.webservice.*"
      sourcepath          = "${sources}"
      destdir             = "${javadocs}"
      classpath           = "${lib}/ftp.jar"
      author              = "true"
      version             = "true"
      use                 = "true"
      access              = "package"
      splitindex          = "true"
      windowtitle         = "MyCoRe JavaDoc Documentation"
      doctitle            = "MyCoRe Source Code JavaDoc Documentation"
    >
      <group title="MyCoRe Packages" packages="mycore.*"/>
      <link href="http://www.mycore.de/library/jdk1.2.2/docs/api"/>
      <link href="http://www-3.ibm.com/software/data/eip/pubs/v7/frnjapr/java"/>
      <link href="http://www.mycore.de/tomcat/documentation/docs/api"/>
      <link href="http://www.mycore.de/library/jaxp/docs/api"/>
      <link href="http://www.jdom.org/docs/apidocs"/>
      <link href="http://www.xmldb.org/xapi/api"/>
    </javadoc>
  </target>

  <!-- =================================================================== -->
  <!-- Remove the user created directories and files                       -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete includeEmptyDirs="true" >
      <fileset dir="${javadocs}" />
      <fileset dir="${classes}"  />
    </delete>
    <delete file="${lib}/mycore.jar" />
  </target>

</project>

<!-- End of file -->

