<project name="MyCoRe Components integration">
  <property name="components.order"
            value="acl-editor,broadcasting,buildtools,classhandler,imaging,indexing,swf,useradmin,userlogin,wcms,webservices,z3950" />

  <import file="${integration.dir}/helper.xml" />
  <taskdef classname="org.mycore.common.MCRConfigurationTask" name="mcr-config" classpathref="integration.classpath" />
  <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="integration.classpath" />
  <!-- for task is not included in antcontrib.properties by default -->
  <taskdef name="for" classname="net.sf.antcontrib.logic.For" classpathref="integration.classpath" />

  <macrodef name="componentPreHook">
    <attribute name="target" />
    <sequential>
      <for list="${components.order}" param="component" parallel="false">
        <sequential>
          <if>
            <resourcecount when="greater" count="0">
              <fileset dir="${integration.dir}" includes="components/@{component}/build.xml">
                <containsregexp expression="\u003ctarget.*name=\u0022pre.@{target}\u0022" />
              </fileset>
            </resourcecount>
            <then>
              <subant target="pre.@{target}" inheritall="true" inheritrefs="true">
                <fileset dir="." includes="components/@{component}/build.xml">
                  <containsregexp expression="\u003ctarget.*name=\u0022pre.@{target}\u0022" />
                </fileset>
              </subant>
            </then>
            <else>
              <echo level="debug">No target pre.@{target} found in component @{component}.</echo>
            </else>
          </if>
        </sequential>
      </for>
    </sequential>
  </macrodef>
  <macrodef name="componentHook">
    <attribute name="target" />
    <sequential>
      <for list="${components.order}" param="component" parallel="false">
        <sequential>
          <if>
            <resourcecount when="greater" count="0">
              <fileset dir="${integration.dir}" includes="components/@{component}/build.xml">
                <containsregexp expression="\u003ctarget.*name=\u0022@{target}\u0022" />
              </fileset>
            </resourcecount>
            <then>
              <subant target="@{target}" inheritall="true" inheritrefs="true">
                <fileset dir="." includes="components/@{component}/build.xml">
                  <containsregexp expression="\u003ctarget.*name=\u0022@{target}\u0022" />
                </fileset>
              </subant>
            </then>
            <else>
              <echo level="debug">No target @{target} found in component @{component}.</echo>
            </else>
          </if>
        </sequential>
      </for>
    </sequential>
  </macrodef>


  <!-- ================================= 
          target: mycore.properties              
         ================================= -->
  <target name="mycore.properties" description="--> generates mycore.properties file">
    <property name="mycore.properties.target" location="${build.config}/mycore.properties" />
    <copy todir="${build.config}" overwrite="true" file="${integration.dir}/config/mycore.properties" />
    <componentPreHook target="mycore.properties" />
    <for param="component.property" trim="true">
      <fileset id="mycore.components.properties" dir="${integration.dir}/components">
        <include name="*/config/mycore.properties" />
      </fileset>
      <sequential>
        <mcr-config propertyfile="${build.config}/mycore.properties" mergeFile="@{component.property}" />
      </sequential>
    </for>
    <componentHook target="mycore.properties" />
  </target>

  <!-- ================================= 
          target: info              
         ================================= -->
  <target name="info" description="--> prints some information about the integration">
    <echoproperties />
  </target>


</project>
